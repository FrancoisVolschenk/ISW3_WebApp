# import os
#
# def find_file(target_filename, search_path):
#     found_files = []
#
#     for root, _, files in os.walk(search_path):
#         if target_filename in files:
#             found_files.append(os.path.join(root, target_filename))
#
#     return found_files
#
# if __name__ == "__main__":
#     target_filename = input("Enter the name of the file you want to find: ")
#     search_path = input("Enter the directory to start the search from (leave empty for the entire system): ")
#
#     if not search_path:
#         search_path = "/"
#
#     found_files = find_file(target_filename, search_path)
#
#     if found_files:
#         print(f"Found {len(found_files)} instances of '{target_filename}':")
#         for file_path in found_files:
#             print(file_path)
#     else:
#         print(f"'{target_filename}' not found in the specified directory or its subdirectories.")


import os
from cryptography.fernet import Fernet


def find_file(target_filename, search_path):
    found_files = []

    for root, _, files in os.walk(search_path):
        if target_filename in files:
            found_files.append(os.path.join(root, target_filename))

    return found_files


def encrypt_file(file_path, key):
    with open(file_path, 'rb') as file:
        data = file.read()

    fernet = Fernet(key)
    encrypted_data = fernet.encrypt(data)

    with open(file_path, 'wb') as file:
        file.write(encrypted_data)


def delete_file(file_path):
    os.remove(file_path)


if __name__ == "__main__":
    target_filename = "target.txt" # input("Enter the name of the file you want to find: ")
    search_path = "C:/" #input("Enter the directory to start the search from (leave empty for the entire system): ")

    # if not search_path:
    #     search_path = "C:/"

    found_files = find_file(target_filename, search_path)

    if found_files:
        print(f"Found {len(found_files)} instances of '{target_filename}':")
        for file_path in found_files:
            print(file_path)

        action = "delete" # input("Do you want to encrypt or delete these files? (encrypt/delete): ").strip().lower()

        if action == "encrypt":
            encryption_key = Fernet.generate_key()
            for file_path in found_files:
                encrypt_file(file_path, encryption_key)
            print("Files encrypted.")
            print(f"Encryption Key: {encryption_key.decode()}")
        elif action == "delete":
            for file_path in found_files:
                delete_file(file_path)
            print("Files deleted.")
        else:
            print("Invalid action. Please choose 'encrypt' or 'delete'.")
    else:
        print(f"'{target_filename}' not found in the specified directory or its subdirectories.")


